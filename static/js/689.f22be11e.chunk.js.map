{"version":3,"file":"static/js/689.f22be11e.chunk.js","mappings":"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","sources":["components/CategorySearchSelector/CategorySearchSelector.jsx","components/Task/Task.module.css","components/Task/Task.jsx","webpack://todo-list-test/./src/components/TodoForm/TodoForm.module.css?eb65","components/TodoForm/TodoForm.jsx","components/TodoList/TodoList.module.css","components/TodoList/TodoList.jsx","webpack://todo-list-test/./src/pages/TodoListPage.module.css?dc8f","pages/TodoListPage.jsx"],"sourcesContent":["import React from 'react';\n\nconst CategorySearchSelector = ({ searchQuery, setSearchQuery }) => {\n  return (\n    <select value={searchQuery} onChange={e => setSearchQuery(e.target.value)}>\n      <option value=\"work\">Work</option>\n      <option value=\"study\">Study</option>\n      <option value=\"personal\">Personal</option>\n    </select>\n  );\n};\n\nexport default CategorySearchSelector;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FcFullTrash } from 'react-icons/fc';\n\nimport { deleteTask, toggleCompleted } from '../../store/tasksSlice';\n\nimport styles from './Task.module.css';\n\nconst Task = ({ task }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteTask(task.id));\n\n  const handleToggle = () => dispatch(toggleCompleted(task.id));\n\n  return (\n    <div className={styles.wrapper}>\n      <input\n        type=\"checkbox\"\n        className={styles.checkbox}\n        checked={task.completed}\n        onChange={handleToggle}\n      />\n      <div>\n        <p className={styles.nameText}>\n          <strong>Task:</strong> {task.text.name}\n        </p>\n        <p className={styles.descriptionText}>\n          <strong>Description:</strong>\n          {task.text.description || 'No Description'}\n        </p>\n        <p className={styles.dateText}>{task.text.dueDate}</p>\n        <p className={styles.categoryText}>{task.text.category}</p>\n      </div>\n      <button className={styles.btn} onClick={handleDelete}>\n        <FcFullTrash style={{ fontSize: '20px' }} />\n      </button>\n    </div>\n  );\n};\n\nexport default Task;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TodoForm_form__nRTho\",\"formElement\":\"TodoForm_formElement__lU2ho\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport CategorySearchSelector from 'components/CategorySearchSelector/CategorySearchSelector';\nimport { Button } from 'components/Button/Button';\nimport { addTask } from '../../store/actions';\n\nimport styles from './TodoForm.module.css';\n\nconst TodoForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [category, setCategory] = useState('work');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(addTask({ name, description, dueDate, category }));\n    setName('');\n    setDescription('');\n    setDueDate('');\n    setCategory('work');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <div>\n        <div className={styles.formElement}>\n          <label htmlFor=\"inputTitle\">Task</label>\n          <input\n            id=\"inputTitle\"\n            className={styles.field}\n            type=\"text\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n            placeholder=\"Name your task...\"\n            required\n          />\n        </div>\n        <div className={styles.formElement}>\n          <label htmlFor=\"inputDescription\">Description</label>\n          <input\n            id=\"inputDescription\"\n            className={styles.field}\n            type=\"text\"\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            placeholder=\"Enter some details...\"\n          />\n        </div>\n        <div className={styles.formElement}>\n          <label htmlFor=\"dueDate\">Due Date</label>\n          <input\n            id=\"dueDate\"\n            type=\"date\"\n            value={dueDate}\n            onChange={e => setDueDate(e.target.value)}\n          />\n        </div>\n        <div className={styles.formElement}>\n          <label htmlFor=\"category\">Category</label>\n          <CategorySearchSelector\n            searchQuery={category}\n            setSearchQuery={setCategory}\n          />\n        </div>\n      </div>\n      <div>\n        <Button type=\"submit\">Add task</Button>\n      </div>\n    </form>\n  );\n};\n\nexport default TodoForm;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport CategorySearchSelector from 'components/CategorySearchSelector/CategorySearchSelector';\nimport Task from 'components/Task/Task';\nimport { getTasks, getStatusFilter } from '../../store/selectors';\nimport { statusFilters } from '../../store/constants';\n\nimport styles from './TodoList.module.css';\n\nconst getVisibleTasks = (tasks, statusFilter, searchQuery) => {\n  return tasks.filter(task => {\n    const matchesStatus =\n      statusFilter === statusFilters.all ||\n      (statusFilter === statusFilters.active && !task.completed) ||\n      (statusFilter === statusFilters.completed && task.completed);\n    const matchesSearch = task.text.category\n      .toLowerCase()\n      .includes(searchQuery.toLowerCase());\n    return matchesStatus && matchesSearch;\n  });\n};\n\nconst TodoList = () => {\n  const tasks = useSelector(getTasks);\n  const statusFilter = useSelector(getStatusFilter);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const visibleTasks = getVisibleTasks(tasks, statusFilter, searchQuery);\n\n  return (\n    <div>\n      <h3>Find your tasks by category</h3>\n      <CategorySearchSelector\n        searchQuery={searchQuery}\n        setSearchQuery={setSearchQuery}\n      />\n      <ul className={styles.list}>\n        {visibleTasks.map(task => (\n          <li className={styles.listItem} key={task.id}>\n            <Task task={task} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n","// extracted by mini-css-extract-plugin\nexport default {\"pageSection\":\"TodoListPage_pageSection__HOohk\",\"heading\":\"TodoListPage_heading__8Qhlu\"};","import React from 'react';\n\nimport TodoForm from '../components/TodoForm/TodoForm';\nimport TodoList from '../components/TodoList/TodoList';\n\nimport styles from './TodoListPage.module.css';\n\nconst TodoListPage = () => {\n  return (\n    <section className={styles.pageSection}>\n      <h2 className={styles.heading}>Create new task</h2>\n      <TodoForm />\n      <TodoList />\n    </section>\n  );\n};\n\nexport default TodoListPage;\n"],"names":["_ref","searchQuery","setSearchQuery","_jsxs","value","onChange","e","target","children","_jsx","task","dispatch","useDispatch","className","styles","type","checked","completed","toggleCompleted","id","text","name","description","dueDate","category","onClick","deleteTask","FcFullTrash","style","fontSize","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setDescription","_useState5","_useState6","setDueDate","_useState7","_useState8","setCategory","onSubmit","event","preventDefault","addTask","htmlFor","placeholder","required","CategorySearchSelector","Button","tasks","useSelector","getTasks","statusFilter","getStatusFilter","visibleTasks","filter","matchesStatus","statusFilters","matchesSearch","toLowerCase","includes","getVisibleTasks","map","Task","TodoForm","TodoList"],"sourceRoot":""}