{"version":3,"file":"static/js/436.65ad0760.chunk.js","mappings":"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","sources":["components/Task/Task.module.css","components/Task/Task.jsx","components/TodoForm/TodoForm.module.css","components/TodoForm/TodoForm.jsx","components/TodoList/TodoList.module.css","components/TodoList/TodoList.jsx","pages/TodoListPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FcFullTrash } from 'react-icons/fc';\n\nimport { deleteTask, toggleCompleted } from '../../store/tasksSlice';\n\nimport styles from './Task.module.css';\n\nconst Task = ({ task }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteTask(task.id));\n\n  const handleToggle = () => dispatch(toggleCompleted(task.id));\n\n  return (\n    <div className={styles.wrapper}>\n      <input\n        type=\"checkbox\"\n        className={styles.checkbox}\n        checked={task.completed}\n        onChange={handleToggle}\n      />\n      <div>\n        <p className={styles.nameText}>\n          <strong>Task:</strong> {task.text.name}\n        </p>\n        <p className={styles.descriptionText}>\n          <strong>Description:</strong>\n          {task.text.description || 'No Description'}\n        </p>\n        <p className={styles.dateText}>{task.text.dueDate}</p>\n        <p className={styles.categoryText}>{task.text.category}</p>\n      </div>\n      <button className={styles.btn} onClick={handleDelete}>\n        <FcFullTrash style={{ fontSize: '20px' }} />\n      </button>\n    </div>\n  );\n};\n\nexport default Task;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addTask } from '../../store/actions';\n\nimport styles from './TodoForm.module.css';\n\nconst TodoForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [category, setCategory] = useState('work');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(addTask({ name, description, dueDate, category }));\n    setName('');\n    setDescription('');\n    setDueDate('');\n    setCategory('work');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"inputTitle\">Task</label>\n        <input\n          id=\"inputTitle\"\n          className={styles.field}\n          type=\"text\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          placeholder=\"Name your task...\"\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"inputDescription\">Description</label>\n        <input\n          id=\"inputDescription\"\n          className={styles.field}\n          type=\"text\"\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n          placeholder=\"Enter some details...\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"dueDate\">Due Date</label>\n        <input\n          id=\"dueDate\"\n          type=\"date\"\n          value={dueDate}\n          onChange={e => setDueDate(e.target.value)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"category\">Category</label>\n        <select\n          id=\"category\"\n          value={category}\n          onChange={e => setCategory(e.target.value)}\n        >\n          <option value=\"work\">Work</option>\n          <option value=\"study\">Study</option>\n          <option value=\"personal\">Personal</option>\n        </select>\n      </div>\n      <button type=\"submit\">Add task</button>\n    </form>\n  );\n};\n\nexport default TodoForm;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useSelector } from 'react-redux';\n\nimport Task from 'components/Task/Task';\nimport { getTasks, getStatusFilter } from '../../store/selectors';\nimport { statusFilters } from '../../store/constants';\n\nimport styles from './TodoList.module.css';\n\nconst getVisibleTasks = (tasks, statusFilter) => {\n  switch (statusFilter) {\n    case statusFilters.active:\n      return tasks.filter(task => !task.completed);\n    case statusFilters.completed:\n      return tasks.filter(task => task.completed);\n    default:\n      return tasks;\n  }\n};\n\nconst TodoList = () => {\n  const tasks = useSelector(getTasks);\n  const statusFilter = useSelector(getStatusFilter);\n  const visibleTasks = getVisibleTasks(tasks, statusFilter);\n\n  return (\n    <ul className={styles.list}>\n      {visibleTasks.map(task => (\n        <li className={styles.listItem} key={task.id}>\n          <Task task={task} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React from 'react';\n\nimport TodoForm from '../components/TodoForm/TodoForm';\nimport TodoList from '../components/TodoList/TodoList';\n\nconst TodoListPage = () => {\n  return (\n    <>\n      <TodoForm />\n      <TodoList />\n    </>\n  );\n};\n\nexport default TodoListPage;\n"],"names":["_ref","task","dispatch","useDispatch","_jsxs","className","styles","children","_jsx","type","checked","completed","onChange","toggleCompleted","id","text","name","description","dueDate","category","onClick","deleteTask","FcFullTrash","style","fontSize","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setDescription","_useState5","_useState6","setDueDate","_useState7","_useState8","setCategory","onSubmit","event","preventDefault","addTask","htmlFor","value","e","target","placeholder","required","visibleTasks","tasks","statusFilter","statusFilters","filter","getVisibleTasks","useSelector","getTasks","getStatusFilter","map","Task","_Fragment","TodoForm","TodoList"],"sourceRoot":""}