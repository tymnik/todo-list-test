{"version":3,"file":"static/js/959.3530ea41.chunk.js","mappings":"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","sources":["webpack://todo-list-test/./src/components/CategorySearchSelector/CategorySearchSelector.module.css?15f5","components/CategorySearchSelector/CategorySearchSelector.jsx","webpack://todo-list-test/./src/components/Task/Task.module.css?22e8","components/Task/Task.jsx","pages/CompletedTasksPage.jsx","webpack://todo-list-test/./src/pages/CompletedTasksPage.module.css?6909"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selector\":\"CategorySearchSelector_selector__nv-Qh\"};","import React from 'react';\n\nimport styles from './CategorySearchSelector.module.css'\n\nconst CategorySearchSelector = ({ searchQuery, setSearchQuery }) => {\n  return (\n    <select\n      className={styles.selector}\n      aria-label=\"Select the category for task\"\n      value={searchQuery}\n      onChange={e => setSearchQuery(e.target.value)}\n    >\n      <option value=\"work\">Work</option>\n      <option value=\"study\">Study</option>\n      <option value=\"personal\">Personal</option>\n    </select>\n  );\n};\n\nexport default CategorySearchSelector;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Task_wrapper__zvx3s\",\"checkboxBlock\":\"Task_checkboxBlock__cu9wR\",\"checkbox\":\"Task_checkbox__XsrPA\",\"taskDetails\":\"Task_taskDetails__gua-q\",\"taskAdditional\":\"Task_taskAdditional__8X7c8\",\"categoryText\":\"Task_categoryText__mmx3K\",\"btn\":\"Task_btn__5Zeie\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FcFullTrash, FcApproval } from 'react-icons/fc';\n\nimport { deleteTask, toggleCompleted } from '../../store/tasksSlice';\n\nimport styles from './Task.module.css';\n\nconst Task = ({ task }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteTask(task.id));\n\n  const handleToggle = () => dispatch(toggleCompleted(task.id));\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.checkboxBlock}>\n        {!task.completed && <p className={styles.checkboxLabel}>Done</p>}\n        <div className={styles.checkboxWrapper}>\n          {task.completed ? (\n            <FcApproval\n              className={styles.checkboxIconChecked}\n              onClick={handleToggle}\n              style={{ fontSize: '20px' }}\n            />\n          ) : (\n            <div className={styles.checkbox} onClick={handleToggle}></div>\n          )}\n        </div>\n      </div>\n      <div className={styles.taskDetails}>\n        <div>\n          <p className={styles.nameText}>\n            <strong>Task:</strong> {task.text.name}\n          </p>\n          <p className={styles.descriptionText}>\n            <strong>Description:</strong>{' '}\n            {task.text.description || 'No Description'}\n          </p>\n          <p className={styles.dateText}>{task.text.dueDate}</p>\n        </div>\n      </div>\n      <div className={styles.taskAdditional}>\n        <p className={styles.categoryText}>{task.text.category}</p>\n        <button className={styles.btn} onClick={handleDelete}>\n          <FcFullTrash style={{ fontSize: '20px' }} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Task;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport CategorySearchSelector from 'components/CategorySearchSelector/CategorySearchSelector';\nimport Task from 'components/Task/Task';\nimport { getTasks } from '../store/selectors';\n\nimport styles from './CompletedTasksPage.module.css';\n\nconst CompletedTasksPage = () => {\n  const tasks = useSelector(getTasks);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const completedTasks = tasks.filter(\n    task =>\n      task.completed &&\n      task.text.category.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <section className={styles.pageSection}>\n      <div className={styles.pageWrapper}>\n        <h2 className={styles.heading}>Completed tasks</h2>\n        <CategorySearchSelector\n          searchQuery={searchQuery}\n          setSearchQuery={setSearchQuery}\n        />\n      </div>\n      <div className={styles.filteredList}>\n        {completedTasks.map(task => (\n          <Task key={task.id} task={task} />\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default CompletedTasksPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"pageSection\":\"CompletedTasksPage_pageSection__e+nB1\",\"pageWrapper\":\"CompletedTasksPage_pageWrapper__9ey71\",\"heading\":\"CompletedTasksPage_heading__UaQiw\",\"filteredList\":\"CompletedTasksPage_filteredList__0FBPR\"};"],"names":["_ref","searchQuery","setSearchQuery","_jsxs","className","styles","value","onChange","e","target","children","_jsx","task","dispatch","useDispatch","handleToggle","toggleCompleted","id","completed","FcApproval","onClick","style","fontSize","text","name","description","dueDate","category","deleteTask","FcFullTrash","tasks","useSelector","getTasks","_useState","useState","_useState2","_slicedToArray","completedTasks","filter","toLowerCase","includes","CategorySearchSelector","map","Task"],"sourceRoot":""}