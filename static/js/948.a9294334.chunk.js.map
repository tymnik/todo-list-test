{"version":3,"file":"static/js/948.a9294334.chunk.js","mappings":"8LACA,GAAiB,E,SC4CjB,EAvCiB,WACf,IAAMA,GAAWC,EAAAA,EAAAA,MAWjB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,KAAaC,SAVX,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OACbC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAAcL,EAAKG,SAASE,YAAYD,MAC9CZ,GAASc,EAAAA,EAAAA,IAAQ,CAAEJ,KAAAA,EAAMG,YAAAA,KACzBL,EAAKO,OACP,EAGuDC,SAAA,EACnDd,EAAAA,EAAAA,MAAA,OAAAc,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,aAAYF,SAAC,UAC5BC,EAAAA,EAAAA,KAAA,SACEE,GAAG,aACHhB,UAAWC,EAAAA,MACXgB,KAAK,OACLV,KAAK,OACLW,YAAY,2BAGhBnB,EAAAA,EAAAA,MAAA,OAAAc,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,mBAAkBF,SAAC,iBAClCC,EAAAA,EAAAA,KAAA,SACEE,GAAG,mBACHhB,UAAWC,EAAAA,MACXgB,KAAK,OACLV,KAAK,cACLW,YAAY,kCAGhBJ,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAAQJ,SAAC,eAG5B,E,SC1CA,GAAiB,ECkCjB,EA5Ba,SAAHM,GAAkB,IAAZC,EAAID,EAAJC,KACdC,QAAQC,IAAIF,GACZ,IAAMvB,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,QAAeY,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,SACEG,KAAK,WACLjB,UAAWC,EAAAA,SACXsB,QAASH,EAAKI,UACdC,SARe,WAAH,OAAS5B,GAAS6B,EAAAA,EAAAA,IAAgBN,EAAKJ,IAAK,KAU1DF,EAAAA,EAAAA,KAAA,OAAAD,UACEd,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAAA,KAAYY,SAAA,CACvBO,EAAKO,KAAKpB,KAAK,KAAGa,EAAKO,KAAKjB,aAAe,uBAGhDI,EAAAA,EAAAA,KAAA,UAAQd,UAAWC,EAAAA,IAAY2B,QAjBd,WAAH,OAAS/B,GAASgC,EAAAA,EAAAA,IAAWT,EAAKJ,IAAK,EAiBAH,SAAC,YAK5D,E,kBChCA,GAAiB,ECkCjB,EAhBiB,WACf,IAEMiB,EAdgB,SAACC,EAAOC,GAC9B,OAAQA,GACN,KAAKC,EAAAA,EAAAA,OACH,OAAOF,EAAMG,QAAO,SAAAd,GAAI,OAAKA,EAAKI,SAAS,IAC7C,KAAKS,EAAAA,EAAAA,UACH,OAAOF,EAAMG,QAAO,SAAAd,GAAI,OAAIA,EAAKI,SAAS,IAC5C,QACE,OAAOO,EAEb,CAKuBI,EAFPC,EAAAA,EAAAA,IAAYC,EAAAA,IACLD,EAAAA,EAAAA,IAAYE,EAAAA,IAGjC,OACExB,EAAAA,EAAAA,KAAA,MAAId,UAAWC,EAAAA,KAAYY,SACxBiB,EAAaS,KAAI,SAAAnB,GAAI,OACpBN,EAAAA,EAAAA,KAAA,MAAId,UAAWC,EAAAA,SAAgBY,UAC7BC,EAAAA,EAAAA,KAAC0B,EAAI,CAACpB,KAAMA,KADuBA,EAAKJ,GAErC,KAIb,EClBA,EAVqB,WAEnB,OACEjB,EAAAA,EAAAA,MAAA,OAAAc,SAAA,EACEC,EAAAA,EAAAA,KAAC2B,EAAQ,KACT3B,EAAAA,EAAAA,KAAC4B,EAAQ,MAGf,C","sources":["components/TodoForm/TodoForm.module.css","components/TodoForm/TodoForm.jsx","components/Task/Task.module.css","components/Task/Task.jsx","components/TodoList/TodoList.module.css","components/TodoList/TodoList.jsx","pages/TodoListPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useDispatch } from 'react-redux';\n\nimport { addTask } from '../../store/actions';\n\nimport styles from './TodoForm.module.css';\n\nconst TodoForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    const description = form.elements.description.value;\n    dispatch(addTask({ name, description }));\n    form.reset();\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"inputTitle\">Task</label>\n        <input\n          id=\"inputTitle\"\n          className={styles.field}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter task text...\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"inputDescription\">Description</label>\n        <input\n          id=\"inputDescription\"\n          className={styles.field}\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Enter task description...\"\n        />\n      </div>\n      <button type=\"submit\">Add task</button>\n    </form>\n  );\n};\n\nexport default TodoForm;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteTask, toggleCompleted } from '../../store/tasksSlice';\n\nimport styles from './Task.module.css';\n\nconst Task = ({ task }) => {\n  console.log(task);\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteTask(task.id));\n\n  const handleToggle = () => dispatch(toggleCompleted(task.id));\n\n  return (\n    <div className={styles.wrapper}>\n      <input\n        type=\"checkbox\"\n        className={styles.checkbox}\n        checked={task.completed}\n        onChange={handleToggle}\n      />\n      <div>\n        <p className={styles.text}>\n          {task.text.name}: {task.text.description || 'No Description'}\n        </p>\n      </div>\n      <button className={styles.btn} onClick={handleDelete}>\n        close\n      </button>\n    </div>\n  );\n};\n\nexport default Task;","// extracted by mini-css-extract-plugin\nexport default {};","import { useSelector } from 'react-redux';\n\nimport Task from 'components/Task/Task';\nimport { getTasks, getStatusFilter } from '../../store/selectors';\nimport { statusFilters } from '../../store/constants';\n\nimport styles from './TodoList.module.css';\n\nconst getVisibleTasks = (tasks, statusFilter) => {\n  switch (statusFilter) {\n    case statusFilters.active:\n      return tasks.filter(task => !task.completed);\n    case statusFilters.completed:\n      return tasks.filter(task => task.completed);\n    default:\n      return tasks;\n  }\n};\n\nconst TodoList = () => {\n  const tasks = useSelector(getTasks);\n  const statusFilter = useSelector(getStatusFilter);\n  const visibleTasks = getVisibleTasks(tasks, statusFilter);\n\n  return (\n    <ul className={styles.list}>\n      {visibleTasks.map(task => (\n        <li className={styles.listItem} key={task.id}>\n          <Task task={task} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React from 'react';\n\nimport TodoForm from 'components/TodoForm/TodoForm';\nimport TodoList from 'components/TodoList/TodoList';\n    \nconst TodoListPage = () => {\n\n  return (\n    <div>\n      <TodoForm />\n      <TodoList />\n    </div>\n  );\n};\n\nexport default TodoListPage;\n"],"names":["dispatch","useDispatch","_jsxs","className","styles","onSubmit","event","preventDefault","form","target","name","elements","value","description","addTask","reset","children","_jsx","htmlFor","id","type","placeholder","_ref","task","console","log","checked","completed","onChange","toggleCompleted","text","onClick","deleteTask","visibleTasks","tasks","statusFilter","statusFilters","filter","getVisibleTasks","useSelector","getTasks","getStatusFilter","map","Task","TodoForm","TodoList"],"sourceRoot":""}